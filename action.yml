name: 'Repo has new commits'
description: 'Checks if the repo has new commits'
inputs:
  # repoURL:  # id of input
  #   description: 'The repo address'
  #   required: true
  #   default: ''
  token:
    description: 'The authorization token'
    required: true
    default: ''
  interval:  # id of input
    description: 'The interval in seconds'
    required: false
    default: 86400
outputs:
  has-updates: # id of output
    description: 'true the repo has updates, otherwise false'
    value: ${{ steps.check.outputs.result }}
runs:
  using: 'composite'
  steps:
    - name: Display input params
      run: |
        echo "repoURL: ${{ github.repository }}"
        echo "interval: ${{ inputs.interval }}"
      shell: bash

    - id: check
      run: |
        curl -H "Authorization: token ${{ inputs.token }}" -s https://api.github.com/repos/${{ github.repository }}/commits | jq -r '[.[] | select(.author.login)][0]' > $HOME/data.json
        date="$(jq -r '.commit.author.date' $HOME/data.json)"
        timestamp=$(date --utc -d "$date" +%s)
        days=$(( ( $(date --utc +%s) - $timestamp ) / ${{ inputs.interval }} ))

        rm -f $HOME/data.json

        echo "Repository activity : $timestamp $days"
        alive=false

        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "[WARNING] Ignoring activity limits : workflow triggered manually"
          alive=1
        else
          if [ $days -gt 1 ]; then
            echo "Repository activity : $days days ago"
            alive=true
          else
            echo "[WARNING] Repository not updated : event<${{ github.event_name }}> not allowed to modify stale repository"
          fi
        fi

        echo "::set-output name=result::$(echo $alive)"
      shell: bash